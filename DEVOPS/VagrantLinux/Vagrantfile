# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"
  config.vm.hostname = "master.hw3.vm"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  config.vm.network "forwarded_port", guest: 80, host: 8082
  config.vm.network "forwarded_port", guest: 3389, host: 8888,
    id:"rdp", auto_correct: true
  
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #  vb.memory = "512"
  #end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "coreinstall", type: "shell", inline: <<-SHELL
       sudo yum -y update
       sudo yum -y upgrade
       #sudo yum -y install gcc
       #sudo yum -y install kernel-devel
    SHELL

  config.vm.provision "installapache", type: "shell", inline: <<-SHELL
      sudo yum install -y httpd
      sudo systemctl enable httpd
      sudo systemctl start httpd
      sudo echo "<h1> Hello Centos</h1>" > /var/www/html/index.html
      
   SHELL

  config.vm.provision "installxrdp", type: "shell", inline: <<-SHELL
      sudo rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      sudo yum -y install xrdp tigervnc-server
      sudo systemctl enable xrdp.service
      sudo systemctl start xrdp.service
      #sudo systemctl enable firewalld
      #sudo systemctl start firewalld
      #sudo systemctl status firewalld
      #sudo firewall-cmd --permanent --zone=public --add-port=3389/tcp
      #sudo firewall-cmd --reload
      sudo chcon --type=bin_t /usr/sbin/xrdp
      sudo chcon --type=bin_t /usr/sbin/xrdp-sesman
      sudo timedatectl set-timezone "America/Los_Angeles"
      
    SHELL

   config.vm.provision "installgui", type: "shell", inline: <<-SHELL
      
      # install KDE
        sudo yum -y groupinstall "KDE desktop" "X Window System" "Fonts"
        sudo systemctl set-default graphical.target
        echo "KDE installed ..."

        # install Gnome
        sudo yum -y groupinstall "GNOME Desktop" "Graphical Administration Tools"
        sudo ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target
        echo "Gnome installed ..."
        sudo reboot
    SHELL



end
